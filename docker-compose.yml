version: '3'

services:
    gateway:
        build: ./gateway
        restart: always
        container_name: gateway_container
        hostname: gateway
        volumes:
            - ./gateway:/usr/src/app:cached
        command: yarn start:dev
        networks:
            - backend
        env_file:
            - .env
        environment:
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_USERNAME: ${DATABASE_USERNAME}
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_HOST: ${DATABASE_HOST}
        ports:
            - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
        depends_on:
            - 'token'
            - 'user'
            - 'postgres'

    token:
        build: ./token
        restart: always
        container_name: token_container
        hostname: token
        volumes:
            - ./token:/usr/src/app:cached
        command: yarn start:dev
        networks:
            - backend
        env_file:
            - .env

    user:
        build: ./user
        restart: always
        container_name: user_container
        hostname: user
        volumes:
            - ./user:/usr/src/app:cached
        command: yarn start:dev
        networks:
            - backend
        env_file:
            - .env

    postgres:
        image: postgres:12.4-alpine
        restart: always
        container_name: database_container
        hostname: database
        environment:
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_DB: ${DATABASE_NAME}
            PG_DATA: ./var/lib/postgresql/data
        ports:
            - ${DATABASE_PORT}:${DATABASE_PORT}
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - backend
        env_file:
            - .env

networks:
    backend:
        driver: bridge

volumes:
    pgdata:
