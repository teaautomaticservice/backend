version: "3.8"

services:
  postgres:
    image: postgres:12.4-alpine
    restart: always
    container_name: database_container
    hostname: database
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      PG_DATA: ./var/lib/postgresql/data
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservices_backend
    env_file:
      - .env

  token:
    build:
      context: ./token
      dockerfile: ./docker/Dockerfile
    restart: always
    container_name: token_container
    hostname: token
    networks:
      - microservices_backend
    env_file:
      - .env
    depends_on:
      - postgres
    links:
      - postgres

  user:
    build:
      context: ./user
      dockerfile: ./docker/Dockerfile
    restart: always
    container_name: user_container
    hostname: user
    networks:
      - microservices_backend
    env_file:
      - .env
    depends_on:
      - postgres
    links:
      - postgres

  gateway:
    build:
      context: ./gateway
      dockerfile: ./docker/Dockerfile
    restart: always
    container_name: gateway_container
    hostname: gateway
    networks:
      - microservices_backend
    env_file:
      - .env
    depends_on:
      - postgres
      - token
      - user
    links:
      - postgres
    environment:
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}

networks:
  microservices_backend:
    driver: bridge

volumes:
  pgdata:
