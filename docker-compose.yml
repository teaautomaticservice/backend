version: "3.8"

services:
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
      PG_DATA: ./var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - microservices_backend
    env_file:
      - .env
  nginx:
    image: nginx
    restart: always
    expose:
      - "80"
    ports:
      - "80:80"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      microservices_backend: null
  auth:
    build:
      context: ./auth
      dockerfile: ./docker/Dockerfile
    restart: always
    hostname: token
    networks:
      - microservices_backend
    env_file:
      - .env
    depends_on:
      - database
    links:
      - database
    environment:
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: ${DATABASE_HOST}

  gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    hostname: gateway
    networks:
      - microservices_backend
    env_file:
      - .env
    depends_on:
      - database
      - auth
    links:
      - database
    ports:
      - ${GATEWAY_SERVICE_PORT}:${GATEWAY_SERVICE_PORT}

networks:
  microservices_backend:
    driver: bridge

volumes:
  pgdata:
